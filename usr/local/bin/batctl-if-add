#!/bin/sh
# Split behavior based on whether /sys/class/net/bat0 exists:
# - If does not exist, add bat0:
#     - Set up bat0 link 2 interface, running on link 3 $IF.
#     - Connect bat0 to $BR.
# - If exists, delete bat0 in the reverse order as adding bat0.

NETDIR="/sys/class/net"
: ${IF:=wlan0}
: ${BR:=br-lan}

usage() {
    printf "You must be root to run this script.\n"
    printf "Usage: [IF=<name-of-if>] ./batctl-if-add\n"
    exit 1
}

mod_bat0_mac() {
    IFACE_ADDRESS="$NETDIR/$IF/address"
    if [ ! -f $IFACE_ADDRESS ]; then
        printf "$IFACE_ADDRESS not found\n"
        usage
    fi
    read IFACE_MAC_COLONS < $IFACE_ADDRESS
    printf "MAC of %s: " "$IF"
    printf "%s\n" "$IFACE_MAC_COLONS"

    IFACE_MAC=$(echo $IFACE_MAC_COLONS | tr -d ':')
    BAT0_MAC=$(( 0x$IFACE_MAC + 1 ))
    BAT0_MAC_COLONS=$(printf "%012x" $BAT0_MAC | sed 's/../&:/g;s/:$//')
    printf "MAC of bat0: %s\n" "$BAT0_MAC_COLONS"
}

mod_if() {
    if [ -f "$NETDIR/bat0" ]; then
        brctl delif $BR bat0

    else
        ip link set $IF down
        ip link set $IF mtu 1532
        ip link set $IF up
        batctl if add $IF
        ip link set bat0 address $BAT0_MAC_COLONS
        BAT0_IP=$(mac-to-ip $BAT0_MAC)
        ip -6 addr add $BAT0_IP/64 dev bat0
        ip link set bat0 up
        printf "IP of bat0: %s\n" "$BAT0_IP"

    fi
}

# Assume $BR already up, and connected to Ethernet for internet access
mod_br() {
    if [ -f "$NETDIR/bat0" ]; then
        brctl addif $BR bat0

    else
        ip link set bat0 down
        batctl if del $IF

    fi
}

check_root() {
    if [ $USER != "root" ]; then
        usage
    fi
}

check_root
mod_bat0_mac
mod_if
mod_br
